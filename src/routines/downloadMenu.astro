<div class="relative inline-flex flex-col items-end text-left mt-2 mb-2" id="asd">
    <button type="button" class="md:ml-5 inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-red-500 text-sm font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500" id="options-menu" aria-expanded="false" aria-haspopup="true">
        Download
        <svg class="ml-2 -mr-1 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 011.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
    </button>
    <div class="origin-top-right absolute top-full mb-2 ml-5 w-39 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10 hidden" role="menu" aria-orientation="vertical" aria-labelledby="options-menu" id="options-menu-list" tabindex="-1">
        <div class="py-1" role="none">
            <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-pdf">
                PDF - Original
            </a>
            <a href="#" class="text-gray-700 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-png">
                PNG - 1
            </a>
        </div>
    </div>
</div>
<script>
        const optionsMenu = document.getElementById("options-menu");
    const optionsMenuList = document.getElementById("options-menu-list");

    optionsMenu.addEventListener("click", () => {
        optionsMenuList.classList.toggle("hidden");
        optionsMenu.setAttribute("aria-expanded", optionsMenuList.classList.contains("hidden") ? "false" : "true");

        // Positioning logic to make dropdown open upwards
        const rect = optionsMenu.getBoundingClientRect();
        const windowHeight = window.innerHeight;

        if (rect.top > windowHeight / 2) {
            optionsMenuList.classList.add("bottom-full"); // Adjust this value as needed
            optionsMenuList.classList.remove("top-full");
        } else {
            optionsMenuList.classList.add("top-full");
            optionsMenuList.classList.remove("bottom-full");
        }
    });

    // Close the dropdown if user clicks outside of it
    window.addEventListener("click", (event) => {
        if (!optionsMenu.contains(event.target) && !optionsMenuList.contains(event.target)) {
            optionsMenuList.classList.add("hidden");
            optionsMenu.setAttribute("aria-expanded", "false");
        }
    });
</script>
<script>
    const baseURL = 'http://download.com/';

    // Definir los nombres de los archivos según el número en la URL
    const fileNames = {
        '0': {
            pdf: 'rutinaprincipiantes.pdf',
            png: 'rutinaprincipiantes.png'
        },
        '1': {
            pdf: 'RutinaCiclismo.pdf',
            png: 'RutinaCiclismo.png'
        },
        '2': {
            pdf: 'RutinaMujeres.pdf',
            png: 'RutinaMujeres.png'
        },
        '3': {
            pdf: 'RutinaMujeres.pdf',
            png: 'RutinaMujeres.png'
        },
        '4': {
            pdf: 'RutinaMujeres.pdf',
            png: 'RutinaMujeres.png'
        },
        '5': {
            pdf: 'RutinaMujeres.pdf',
            png: 'RutinaMujeres.png'
        },
        '6': {
            pdf: 'RutinaMujeres.pdf',
            png: 'RutinaMujeres.png'
        },
        '7': {
            pdf: 'RutinaMujeres.pdf',
            png: 'RutinaMujeres.png'
        },
        '8': {
            pdf: 'RutinaMujeres.pdf',
            png: 'RutinaMujeres.png'
        },
        
    };

    // Obtener el número de la URL actual
    const currentURL = window.location.href;
    const urlParts = currentURL.split('/');
    const number = urlParts[urlParts.length - 1];

    // Actualizar los enlaces de descarga con los nombres de archivo correctos
    const pdfLink = document.getElementById('menu-item-pdf');
    const pngLink = document.getElementById('menu-item-png');

    pdfLink.href = baseURL + fileNames[number].pdf;
    pngLink.href = baseURL + fileNames[number].png;
</script>